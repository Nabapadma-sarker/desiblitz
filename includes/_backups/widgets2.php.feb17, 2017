<?php
	
	/*******************************************
		Taboola 1 Widget: Register
	********************************************/
	function reg_cus_taboola_widget() {
		register_widget( 'cus_taboola_widget' );
	}
	add_action( 'widgets_init', 'reg_cus_taboola_widget' );	
	/********************************************
		Taboola 1 Widget: Body
	*********************************************/
	class cus_taboola_widget extends WP_Widget 
	{
		function __construct() {
			parent::__construct(
				'cus_taboola_widget', // Base ID
				__('(DESIblitz) Taboola 1' ), // Name
				array( 'description' => __( 'Display Taboola 1' ), ) // Args
			);
		}
		
		/**
		 * Front-end display of widget.
		 */
		public function widget( $args, $instance ) {
			$widget_title = $instance['widget_title']; 
		?>
	    	<li>
	    		<h2 class="section-title capitalize"><span><?php esc_html_e($widget_title)?></span><i></i></h2>
                <div id="taboola-below-article-thumbnails"></div>
				<script type="text/javascript">
					window._taboola = window._taboola || [];
					_taboola.push({
						mode: 'thumbnails-a',
						container: 'taboola-below-article-thumbnails',
						placement: 'Below Article Thumbnails',
						target_type: 'mix'
					});
                </script>
			</li>
	<?php }
		
		
		/**
		 * Back-end widget form.
		 */
		public function form( $instance ) {
			if ( isset( $instance[ 'widget_title' ]) ) {
				$widget_title = $instance['widget_title'];
			} else {
				$widget_title = __( 'Taboola 1' );
			}
	?>
            <p>
                <label 
                    for="<?php echo $this->get_field_id( 'widget_title' ); ?>">
                        <?php _e( 'Widget Title:' ); ?>
                </label> 
                <input 	id="<?php echo $this->get_field_id( 'widget_title' ); ?>" 
                    	class="widefat"  type="text" 
                    	name="<?php echo $this->get_field_name( 'widget_title' ); ?>" 
                    	value="<?php echo esc_html($widget_title); ?>" />
            </p>
	<?php 
		}

		/**
		 * Sanitize widget form values as they are saved.
		 * @see WP_Widget::update()
		 * @param array $new_instance Values just sent to be saved.
		 * @param array $old_instance Previously saved values from database.
		 * @return array Updated safe values to be saved.
		 */
		public function update( $new_instance, $old_instance ) 
		{
			$instance = array();
			$instance['widget_title'] = ( ! empty( $new_instance['widget_title'] ) ) ? ( $new_instance['widget_title'] ) : '';
			return $instance;
		}
	} // WIDGET CLASS
	/*************************************************/
	
	
	
	/*******************************************
		Taboola 2 Widget: Register
	********************************************/
	function reg_cus_taboola2_widget() {
		register_widget( 'cus_taboola2_widget' );
	}
	add_action( 'widgets_init', 'reg_cus_taboola2_widget' );	
	/********************************************
		Taboola 2 Widget: Code
	*********************************************/
	class cus_taboola2_widget extends WP_Widget 
	{
		function __construct() {
			parent::__construct(
				'cus_taboola2_widget', // Base ID
				__('(DESIblitz) Taboola 2' ), // Name
				array( 'description' => __( 'Display Taboola 2' ), ) // Args
			);
		}
		
	
		/**
		 * Front-end display of widget.
		 */
		public function widget( $args, $instance ) {
			$widget_title = $instance['widget_title']; 
		?>
	    	<li>
	    		<h2 class="section-title capitalize"><span><?php esc_html_e($widget_title)?></span><i></i></h2>
                <div id="taboola-below-article-thumbnails-2nd"></div>
				<script type="text/javascript">
					window._taboola = window._taboola || [];
					_taboola.push({
						mode: 'organic-thumbnails-a',
						container: 'taboola-below-article-thumbnails-2nd',
						placement: 'Below Article Thumbnails 2nd',
						target_type: 'mix'
					});
					</script>
			</li>
	<?php }
		
		
		/**
		 * Back-end widget form.
		 */
		public function form( $instance ) 
		{
			if ( isset( $instance[ 'widget_title' ]) ) {
				$widget_title = $instance['widget_title'];
			} else {
				$widget_title = __( 'Taboola 2' );
			}
		?>	
            <p>
                <label 
                    for="<?php echo $this->get_field_id( 'widget_title' ); ?>">
                        <?php _e( 'Widget Title:' ); ?>
                </label> 
                <input 
                    id="<?php echo $this->get_field_id( 'widget_title' ); ?>" 
                    class="widefat"  type="text" 
                    name="<?php echo $this->get_field_name( 'widget_title' ); ?>" 
                    value="<?php echo esc_html($widget_title); ?>" />
            </p>
		<?php 
		}

		/**
		 * Sanitize widget form values as they are saved.
		 * @see WP_Widget::update()
		 * @param array $new_instance Values just sent to be saved.
		 * @param array $old_instance Previously saved values from database.
		 * @return array Updated safe values to be saved.
		 */

		public function update( $new_instance, $old_instance ) 
		{
			$instance = array();
			$instance['widget_title'] = ( ! empty( $new_instance['widget_title'] ) ) ? ( $new_instance['widget_title'] ) : '';
			return $instance;
		}

	} // WIDGET CLASS

	/*************************************************/
	
	
	
	/*******************************************
		Taboola 1 Sidebar Widget: Register
	********************************************/
	function reg_taboola_sidebar_widget() {
		register_widget( 'taboola_sidebar_widget' );
	}
	add_action( 'widgets_init', 'reg_taboola_sidebar_widget' );	
	/********************************************
		Taboola 1 Sidebar Widget: Code
	*********************************************/
	class taboola_sidebar_widget extends WP_Widget 
	{
		function __construct() {
			parent::__construct(
				'taboola_sidebar_widget', // Base ID
				__('(DESIblitz) Taboola Sidebar 1' ), // Name
				array( 'description' => __( 'Display the.' ), ) // Args
			);
		}
		
		
		/**
		 * Front-end display of widget.
		 */
		public function widget( $args, $instance ) {
			$widget_title = $instance['widget_title']; 
		?>
	    	<li>
	    		<h2 class="section-title capitalize"><span><?php esc_html_e($widget_title)?></span><i></i></h2>
                <div id="taboola-left-rail-thumbnails"></div>
				<script type="text/javascript">
					window._taboola = window._taboola || [];
					_taboola.push({
						mode: 'organic-thumbnails-lr',
						container: 'taboola-left-rail-thumbnails',
						placement: 'Left Rail Thumbnails',
						target_type: 'mix'
					});
				</script>
			</li>
	<?php }
		
		
		/**
		 * Back-end widget form.
		 */
		public function form( $instance ) {
			if ( isset( $instance[ 'widget_title' ]) ) {
				$widget_title = $instance['widget_title'];	
			} else {
				$widget_title = __( '(DESIblitz) Taboola Sidebar 1' );
			}
			?>
            <p>
                <label 
                    for="<?php echo $this->get_field_id( 'widget_title' ); ?>">
                        <?php _e( 'Widget Title:' ); ?>
                </label> 
                <input 	id="<?php echo $this->get_field_id( 'widget_title' ); ?>" 
                    	class="widefat"  type="text" 
                    	name="<?php echo $this->get_field_name( 'widget_title' ); ?>" 
                    	value="<?php echo esc_html($widget_title); ?>" />
            </p>
		<?php 
		}


		/**
		 * Sanitize widget form values as they are saved.
		 * @see WP_Widget::update()
		 * @param array $new_instance Values just sent to be saved.
		 * @param array $old_instance Previously saved values from database.
		 * @return array Updated safe values to be saved.
		 */
		public function update( $new_instance, $old_instance ) 
		{
			$instance = array();
			$instance['widget_title'] = ( ! empty( $new_instance['widget_title'] ) ) ? ( $new_instance['widget_title'] ) : '';
			return $instance;
		}
	} // WIDGET CLASS
	/*************************************************/
	
	
	
	/*******************************************
		Taboola 2 Sidebar Widget: Register
	********************************************/
	function reg_taboola_sidebar2_widget() {
		register_widget( 'sidebar_taboola2_widget' );
	}
	add_action( 'widgets_init', 'reg_taboola_sidebar2_widget' );	
	/********************************************
		Taboola 2 Sidebar Widget: body
	*********************************************/
	class sidebar_taboola2_widget extends WP_Widget 
	{
		function __construct() {
			parent::__construct(
				'sidebar_taboola2_widget', // Base ID
				__('(DESIblitz) Taboola Sidebar 2' ), // Name
				array( 'description' => __( 'Display the.' ), ) // Args
			);
		}

		
		/**
		 * Front-end display of widget.
		 */
		public function widget( $args, $instance ) {
			$widget_title = $instance['widget_title']; 
		?>
	    	<li>
	    		<h2 class="section-title capitalize"><span><?php esc_html_e($widget_title)?></span><i></i></h2>
                <div id="taboola-left-rail-thumbnails-2nd"></div>
				<script type="text/javascript">
					window._taboola = window._taboola || [];
					_taboola.push({
						mode: 'thumbnails-lr',
						container: 'taboola-left-rail-thumbnails-2nd',
						placement: 'Left Rail Thumbnails 2nd',
						target_type: 'mix'
					});
				</script>
			</li>	
	<?php }
		
		
		/**
		 * Back-end widget form.
		 */
		public function form( $instance ) {
			if ( isset( $instance[ 'widget_title' ]) ) {
				$widget_title = $instance['widget_title'];	
			} else {
				$widget_title = __( '(DESIblitz) Taboola Sidebar 2' );
			}
			?>
				<p>
					<label 
						for="<?php echo $this->get_field_id( 'widget_title' ); ?>">
							<?php _e( 'Widget Title:' ); ?>
					</label> 
					<input  id="<?php echo $this->get_field_id( 'widget_title' ); ?>" 
							class="widefat"  type="text" 
							name="<?php echo $this->get_field_name( 'widget_title' ); ?>" 
							value="<?php echo esc_html($widget_title); ?>" />
				</p>
		<?php 
		}

		/**
		 * Sanitize widget form values as they are saved.
		 * @see WP_Widget::update()
		 * @param array $new_instance Values just sent to be saved.
		 * @param array $old_instance Previously saved values from database.
		 * @return array Updated safe values to be saved.
		 */
		public function update( $new_instance, $old_instance ) 
		{
			$instance = array();
			$instance['widget_title'] = ( ! empty( $new_instance['widget_title'] ) ) ? ( $new_instance['widget_title'] ) : '';
			return $instance;
		}
	} // WIDGET CLASS
	/*************************************************/
	
	
	
	/****************************************
		Taboola Mobile Shortcode
	******************************************/
	function taboola_mobile( $atts )
	{	
		return '<div id="taboola-mobile-mid-article-thumbnails"></div>
		<script type="text/javascript">
			window._taboola = window._taboola || [];
			_taboola.push({
				mode: "thumbnails-b",
				container: "taboola-mobile-mid-article-thumbnails",
				placement: "Mobile Mid Article Thumbnails",
				target_type: "mix"
			});
        </script>';   
	}
	add_shortcode( 'taboola-mobile', 'taboola_mobile' );
	/*********************************************************************/
	
	
	
	/*******************************************
		Outbrain Widget: Register
	********************************************/
	function reg_outbrain_widget() {
		register_widget( 'outbrain_widget' );
	}
	add_action( 'widgets_init', 'reg_outbrain_widget' );	
	/********************************************
		Outbrain Widget: Body
	*********************************************/
	class outbrain_widget extends WP_Widget 
	{
		function __construct() {
			parent::__construct(
				'outbrain_widget', // Base ID
				__('(DESIblitz) Outbrain' ), // Name
				array( 'description' => __( 'Display Outbrain Contents' ), ) // Args
			);
		}
	
		
		/**
		 * Front-end display of widget.
		 */
		public function widget( $args, $instance ) 
		{
			$widget_title 		= $instance['widget_title'];
			//$outbrain_template 	= $instance['outbrain_template'];
			//$widget_id 			= $instance['widget_id'];
		?>
	    	<li id="outbrainContainer">
	    		<h2 class="section-title capitalize"><span><?php esc_html_e($widget_title)?></span><i></i></h2>
                <div class="OUTBRAIN" data-widget-id= "TF_6" data-src = "" data-ob-template="DESIblitz"
></div>	
			</li>
	<?php }
		
		
		/**
		 * Back-end widget form.
		 */
		public function form( $instance ) {
			if ( isset( $instance[ 'widget_title' ]) ) {
				$widget_title = $instance['widget_title'];
			} else {
				$widget_title = __( '(DESIblitz) Outbrain' );
			}
			
			
			/*if ( isset( $instance[ 'outbrain_template' ]) ) {
				$outbrain_template = $instance['outbrain_template'];
			} else {
				$outbrain_template = __( '0' );
			}
			
			
			if ( isset( $instance[ 'widget_id' ]) ) {
				$widget_id = $instance['widget_id'];
			} else {
				$widget_id = __( '0' );
			}*/
			
			?>
            <p>
                <label 
                    for="<?php echo $this->get_field_id( 'widget_title' ); ?>">
                        <?php _e( 'Widget Title:' ); ?>
                </label> 
                <input  id="<?php echo $this->get_field_id( 'widget_title' ); ?>" 
	                    class="widefat"  type="text" 
    	                name="<?php echo $this->get_field_name( 'widget_title' ); ?>" 
        	            value="<?php echo esc_html($widget_title); ?>" />
            </p>
                
                <!--Out brain Template--
                <p>
					<label for="<?php echo $this->get_field_id( 'outbrain_template' ); ?>">
							<?php _e( 'Outbrain Template:' ); ?>
					</label> 
					<input  id="<?php echo $this->get_field_id( 'outbrain_template' ); ?>" 
							class="widefat" type="text" 
							name="<?php echo $this->get_field_name( 'outbrain_template' ); ?>" 
							value="<?php echo esc_html($outbrain_template); ?>" />
				</p>
                
                
                <!-- Outbrain Widget ID --
                <p>
					<label 
						for="<?php echo $this->get_field_id( 'widget_id' ); ?>">
							<?php _e( 'Outbrain Widget ID:' ); ?>
					</label> 
					<input  id="<?php echo $this->get_field_id( 'widget_id' ); ?>" 
							class="widefat"  type="text" 
							name="<?php echo $this->get_field_name( 'widget_id' ); ?>" 
							value="<?php echo esc_html($widget_id); ?>" />
				</p>
                <!-- End Outbrain -->
				
		<?php 
		}

		/**
		 * Sanitize widget form values as they are saved.
		 * @see WP_Widget::update()
		 * @param array $new_instance Values just sent to be saved.
		 * @param array $old_instance Previously saved values from database.
		 * @return array Updated safe values to be saved.
		 */

		public function update( $new_instance, $old_instance ) 
		{
			$instance = array();
			$instance['widget_title'] = ( ! empty( $new_instance['widget_title'] ) ) ? ( $new_instance['widget_title'] ) : '';
			
			/*$instance['outbrain_template'] = ( ! empty( $new_instance['outbrain_template'] ) ) ? ( $new_instance['outbrain_template'] ) : '';
			
			$instance['widget_id'] = ( ! empty( $new_instance['widget_id'] ) ) ? ( $new_instance['widget_id'] ) : '';*/
			
			return $instance;
		}

	} // WIDGET CLASS
	/*************************************************/
	
	
	
	/*******************************************
		Outbrain Sidebar Widget: Register
	********************************************/
	function reg_outbrain_sidebar_widget() {
		register_widget( 'outbrain_sidebar_widget' );
	}
	add_action( 'widgets_init', 'reg_outbrain_sidebar_widget' );	
	/********************************************
		Outbrain Sidebar Widget: Body
	*********************************************/
	class outbrain_sidebar_widget extends WP_Widget 
	{
		function __construct() {
			parent::__construct(
				'outbrain_sidebar_widget', // Base ID
				__('(DESIblitz) Outbrain Sidebar' ), // Name
				array( 'description' => __( 'Display the (DESIblitz) Outbrain Sidebar.' ), ) // Args
			);
		}
		
		
		/**
		 * Front-end display of widget.
		 */
		public function widget( $args, $instance ) {
			$widget_title = $instance['widget_title']; 
		?>
	    	<li>
	    		<h2 class="section-title capitalize"><span><?php esc_html_e($widget_title)?></span><i></i></h2>
                <div class="OUTBRAIN" data-widget-id= "TS_1" data-src = "" data-ob-template="DESIblitz"
></div>
			</li>
	<?php }
		
		
		/**
		 * Back-end widget form.
		 */
		public function form( $instance ) {
			if ( isset( $instance[ 'widget_title' ]) ) {
				$widget_title = $instance['widget_title'];	
			} else {
				$widget_title = __( 'Outbrain Sidebar' );
			}
			?>
            <p>
                <label 
                    for="<?php echo $this->get_field_id( 'widget_title' ); ?>">
                        <?php _e( 'Widget Title:' ); ?>
                </label> 
                <input  id="<?php echo $this->get_field_id( 'widget_title' ); ?>" 
	                    class="widefat"  type="text" 
    	                name="<?php echo $this->get_field_name( 'widget_title' ); ?>" 
        	            value="<?php echo esc_html($widget_title); ?>" />
            </p>
		<?php 
		}

		/**
		 * Sanitize widget form values as they are saved.
		 * @see WP_Widget::update()
		 * @param array $new_instance Values just sent to be saved.
		 * @param array $old_instance Previously saved values from database.
		 * @return array Updated safe values to be saved.
		 */

		public function update( $new_instance, $old_instance ) 
		{
			$instance = array();
			$instance['widget_title'] = ( ! empty( $new_instance['widget_title'] ) ) ? ( $new_instance['widget_title'] ) : '';
			return $instance;
		}
	} // WIDGET CLASS
	/*************************************************/
	
	
	
	/*******************************************
		Google Matched Content Widget: Register
	********************************************/
	function reg_google_matched_ad_widget() {
		register_widget( 'google_matched_ad_widget' );
	}
	add_action( 'widgets_init', 'reg_google_matched_ad_widget' );
	/********************************************
		Google Matched Content Widgett: Body
	*********************************************/
	class google_matched_ad_widget extends WP_Widget 
	{
		function __construct() {
			parent::__construct(
				'google_matched_ad_widget', // Base ID
				__('(DESIblitz) Google Matched Content to the Wordpress' ), // Name
				array( 'description' => __( 'Display Google Matched Content.' ), ) // Args
			);
		}
	
		
		/**
		 * Front-end display of widget.
		 */
		public function widget( $args, $instance ) {
			$widget_title = $instance['widget_title']; 
		?>
	    	<li>
	    		<h2 class="section-title capitalize"><span><?php esc_html_e($widget_title)?></span><i></i></h2>
                <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
                <ins class="adsbygoogle" style="display:block" data-ad-format="autorelaxed" data-ad-client="ca-pub-3241871860118891" data-ad-slot="3547800964"></ins>
				<script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
			</li>
	<?php }
		
		
		/**
		 * Back-end widget form.
		 */
		public function form( $instance ) {
			if ( isset( $instance[ 'widget_title' ]) ) {
				$widget_title = $instance['widget_title'];	
			} else {
				$widget_title = __( 'Google Matched Contents' );
			}
			?>
            <p>
                <label 
                    for="<?php echo $this->get_field_id( 'widget_title' ); ?>">
                        <?php _e( 'Widget Title:' ); ?>
                </label> 
                <input  id="<?php echo $this->get_field_id( 'widget_title' ); ?>" 
	                    class="widefat"  type="text" 
    	                name="<?php echo $this->get_field_name( 'widget_title' ); ?>" 
        	            value="<?php echo esc_html($widget_title); ?>" />
            </p>
		<?php 
		}

		/**
		 * Sanitize widget form values as they are saved.
		 * @see WP_Widget::update()
		 * @param array $new_instance Values just sent to be saved.
		 * @param array $old_instance Previously saved values from database.
		 * @return array Updated safe values to be saved.
		 */

		public function update( $new_instance, $old_instance ) 
		{
			$instance = array();
			$instance['widget_title'] = ( ! empty( $new_instance['widget_title'] ) ) ? ( $new_instance['widget_title'] ) : '';
			return $instance;
		}
	} // WIDGET CLASS
	/*************************************************/
	
	
	
	wp_enqueue_style('custome-stylesheet', get_stylesheet_directory_uri() . '/css/style_custom.css',false);